{
    "$schema": "https://raw.githubusercontent.com/jsonresume/resume-schema/v1.0.0/schema.json",
    "basics": {
      "name": "Rustin Soraki",
      "label": "B.Sc. in Computer Engineering",
      "picture": "https://github.com/RastinS.png",
      "email": "rustin.soraki@gmail.com",
      "url": "",
      "summary": "My name is Rustin Soraki. I'm currently working as a reaserch and development engineer at JCo. Previously, I studied a B.Sc. in Computer Engineering at the University of Tehran. My interests are mainly in Machine Learning and Computer Vision, and I also spend my leisure time on cryptocurrencies trading and developing mathematical or learning-based trading bots.",
      "location": {
        "address": "School of Electrical and Computer Engineering, University College of Engineering, University of Tehran, North Kargar st.",
        "postalCode": "14399-57131",
        "city": "Tehran",
        "countryCode": "Iran",
        "region": ""
      },
      "profiles": [
        {
          "network": "github",
          "username": "RastinS",
          "url": "https://github.com/rastins"
        },
        {
          "network": "linkedin",
          "username": "rustin-soraki",
          "url": "https://www.linkedin.com/in/rustin-soraki/"
        }
      ]
    },
    "education": [
        {
            "institution": "University of Tehran",
            "url": "https://ut.ac.ir/en",
            "area": "Computer Engineering",
            "studyType": "Bachelor of Science",
            "startDate": "2016-09-01",
            "endDate": "2022-04-01",
            "lastTwoYearsGPA": "19.37",
            "GPA": "17.25",
            "major": "Software Engineering",
            "grant": "Awarded a governmental full Tuition-Waiver scholarship",
            "courses": ["Artificial Intelligence - 18.75/20", "Neural Networks - 19.74/20", "Engineering Mathematics - 20/20", "Signals and Systems - 18.2/20", 
                        "Introduction to Software Testing - 19.3/20", "Advanced Software Design - 19.07/20", "Software Engineering - 19.1/20"]
        },
        {
            "institution": "Sampad, Shahid Beheshti",
            "url": "",
            "area": "Physics and Mathematics",
            "studyType": "Diploma",
            "startDate": "2011-09-01",
            "endDate": "2016-09-01",
            "GPA": "19.69"
        }
    ],
    "work": [
        {
            "name": "University of Tehran",
            "location": "Tehran, Iran",
            "position": "Undergraduate Research Assistant",
            "summary": "Working on Texture Synthesis problem in Single-View 3D Reconstruction",
            "startDate": "2021-02-01",
            "endDate": "",
            "description": "",
            "highlights": [
                "Best Undergraduate Project Award",
                "Under the Supervision of Prof. Hadi Moradi and Prof. Reshad Hosseini"
            ],
            "url": ""
        },
        {
            "name": "Jadooye Fekr (JCo)",
            "location": "Tehran, Iran",
            "position": "Research and Development Engineer",
            "summary": "Associated with machine learning, computer vision, time-series analysis, cryptocurrencies and python skills",
            "startDate": "2019-01-01",
            "endDate": "",
            "description": "Software Company",
            "highlights": [],
            "url": "https://jco.ir/"
        }
    ],
    "volunteer": [
        {
            "organization": "University of Tehran",
            "position": "Teaching Assistant",
            "startDate": "2017-09-01",
            "endDate": "2022-02-01",
            "highlights": [
                "Neural Networks and Deep Learning - Prof. A. Kalhor",
                "Artifial Intelligence - Prof. H. Moradi & Prof. H. Fadaei",
                "Software Systems Analysis & Design - Prof. F. Ghasemi",
                "Introduction to Programming and Computing Systems - Prof. H. Moradi & Prof. M.R. Hashemi"
            ]
        }
    ],
    "awards": [
      {
        "title": "Best Undergraudate Final Project Award",
        "awarder": "University of Tehran", 
        "date": "2022-03-01",
        "summary": "For \"Texture Synthesis for 3D Shapes with Complexly Repetitive Pattern Using Poisson Blending\""
      },
      {
        "title": "Iran's University Entrance Exam",
        "date": "2016-08-01",
        "awarder": "Sanjesh",
        "summary": "Ranked 269 (Top 0.2%) in Konkur(Iranian University Entrance Exam) among more than 160,000 participants"
      }
    ],
    "publications": [
      {
        "name": "Texture Synthesis for 3D Shapes with Complexly Repetitive Pattern Using Poisson Blending",
        "publisher": "Drafted",
        "releaseDate": "",
        "url": "",
        "summary": "Under supervision of Prof. Hadi Moradi and Prof. Reshad Hosseini, University of Tehran, Iran.",
        "abstract": "One of the biggest challenges in 3D reconstruction is single-view 3D reconstruction, a topic that has recently received much attention with hardware and software advances. This problem contains two main challenges: the production of 3D model geometry and the production of texture. This study aims to produce the texture of a 3D model using the object's surface patterns from the input image using a repetitive slice extracted from it. We utilize a linear optimization strategy to address the problem by minimizing color disparities and light intensity in the border sections of recurring design slices by utilizing image editing in the gradient domain and Poisson blending. We employ our method on middle-eastern domes and pottery with repetitive patterns, and the results demonstrated that using this method leads to visually smooth textures that are comparable with the object's original pattern. Texture generation for objects with an odd number of repetitions in their surface patterns and the ability to preserve textual sections of the pattern are two advantages of the suggested method."
      },
      {
        "name": "Learning Tensorflow 2.0 (Farsi Translation)",
        "publisher": "Simorgh Azargan Publications",
        "releaseDate": "2021-05-01",
        "url": "",
        "summary": "Farsi translation of ”Learn Tensorflow 2.0” by Pramod Singh and Avinash Manure"
      }
    ],
    "skills": [
      {
        "name": "Programming",
        "level": "master",
        "keywords": ["Python"]
      },
      {
        "name": "Programming",
        "level": "advanced",
        "keywords": [
          "C", "C++", "Java", "Verilog"
        ]
      },
      {
        "name": "Programming",
        "level": "intermediate",
        "keywords": [
          "SQL", "C#"
        ]
      },
      {
        "name": "Machine Learning",
        "keywords": [
          "Pandas",
          "NumPy",
          "Keras",
          "PyTorch", 
          "Scikit-Learn",
          "Jupyter Notebook",
          "CNN",
          "RNN"
        ]
      },
      {
        "name": "Other Technologies",
        "keywords": [
          "Docker",
          "Git",
          "JUnit"
        ]
      },
      {
        "name": "Web Development",
        "keywords": [
            "Django",
            "Java Spring"
        ]
      },
      {
        "name": "Markup Languages",
        "keywords": [
            "Latex",
            "HTML", 
            "CSS"
        ]
      },
      {
        "name": "Software Engineering",
        "keywords": [
          "OO Design Patterns", 
          "Agile",
          "Scrum", 
          "Software Testing Methodologies",
          "TDD",
          "BDD"
        ]
      },
      {
        "name": "Operating Systems",
        "keywords": ["Linux", "MacOS"]
      }
    ],
    "languages": [
      {
        "language": "Farsi",
        "fluency": "Native speaker"
      },
      {
        "language": "English",
        "fluency": "Professional working proficiency"
      }
    ],
    "interests": [
      {
        "name": "Personal",
        "keywords": [
            "Exercising",
            "Reading Books",
            "Soccer",
            "Cooking",
            "Traveling",
            "Video Games"
        ]
      },
      {
        "name": "Music",
        "keywords": [
          "Alternative Rock", 
          "Alternative Metal",
          "Rap",
          "Hip Hop",
          "Classical Music"
        ]
      }
    ],
    "researchInterests": [
      {
        "name": "Rsearch",
        "interests": [
            "Machine Learning",
            "Computer Vision",
            "Object detection",
            "Medical Imaging",
            "Time-series Analysis",
            "Reinforcement Learning",
            "Blockchain",
            "Software Engineering",
            "Data Mining"
        ]
      }
    ],
    "certificates": [
        {
            "name": "Cloud Computing Concepts, Part 1",
            "issuer": "University of Illinois Urbana-Champaign",
            "date": "2022-06-22",
            "url": "https://www.coursera.org/account/accomplishments/verify/UWXY6RACWNBX"
        },
        {
            "name": "Neural Networks and Deep Learning",
            "issuer": "DeepLearning.AI",
            "date": "2021-07-24",
            "url": "https://www.coursera.org/account/accomplishments/verify/CWYVWNCBZ4JD"
        },
        {
            "name": "GCP Big Data & ML Fundamentals",
            "issuer": "Binx.io | Part of Xebia",
            "date": "2021-06-01",
            "url": ""
        },
        {
            "name": "Security +",
            "issuer": "Karyar Argham (Carrier Digit)",
            "date": "2020-03-01",
            "url": ""
        },
        {
            "name": "Computer Vision",
            "issuer": "Robotech Academy",
            "date": "2019-12-01",
            "url": ""
        },
        {
            "name": "Iran Blockchain Summer School",
            "issuer": "Sharif Accelerator",
            "date": "2019-08-01",
            "url": ""
        }
    ],
    "projects": [
      {
        "name": "A Framework for Executing Trading Strategies",
        "highlights": ["With capabilities to backward or forward test implemented strategies.",
                      "Implementing different cryptocurrencies trading strategies based on different indicators.",
                      "Implementing different trading strategies using deep learning methods."],
        "entity": "Python, Deep Learning, Algorithmic Trading, Pandas, Forecasting",
        "year": "2022"
      },
      {
        "name": "TradeGate",
        "url": "https://pypi.org/project/TradeGate/",
        "highlights": ["A python library for algorithmic trading and connecting to different exchanges.",
                      "Unifying different exchanges' APIs.",
                      "Implemented using different design patterns."],
        "entity": "Python, Algorithmic Trading, Pandas",
        "year": "2022"
      },
      {
        "name": "Automatic Real-Time Refereeing for Bocce Ball Game",
        "highlights": ["Using four wide angle cameras above the center line of the game court.",
                      "Detecting balls on the ground (four colored balls with a single white ball) using YOLOv5.",
                      "Finding exact distance between colored balls and the white ball using different geometry and image processing techniques.",
                      "Implemented mainly using OpenCV functions."],
        "entity": "Python, Computer Vision, Object Detection, Pytorch, OpenCV",
        "year": "2021"
      },
      {
        "name": "Finding Sentence Similarities",
        "highlights": ["For farsi sentences, using ParsBERT.",
                      "Implemented for a knowledge management system.",
                      "Converting sentences to vectors and finding similar sentences using cosine similarities.",
                      "Provided REST API endpoints using the Django framework."],
        "entity": "Python, NLP, Django",
        "year": "2021"
      },
      {
        "name": "An Automatic License Plate Recognition for Iranian Plates",
        "highlights": ["Using YOLOv3 and updated to YOLOv5.",
                      "Data acquisition was made manually, and different image augmentation techniques were used on the dataset.",
                      "Image augmentation is done using the \"Albumentations\" package and editing the labels correctly.",
                      "Implemented as a two-step detector: First locating the plate and then recognizing plate characters inside the plate area.",
                      "Provided REST and SOAP API endpoints using the Django framework."],
        "entity": "Python, Pytorch, Object Detection, Django",
        "year": "2020"
      },
      {
        "name": "Training CGAN on Fashion-MNIST dataset",
        "highlights": ["Training the GAN network and generating new data.",
                      "Analyzing effects of different loss functions and optimizers in training.",
                      "Generating different results using different latent space points and decoder networks."],
        "entity": "Python, Keras, Deep Learning",
        "year": "2020"
      },
      {
        "name": "Training Variational Auto Encoder and Conditional Variational Auto Encoder on MNIST dataset",
        "highlights": ["Training the encoder and the decoder parts.",
                      "Visualizing the data in latent space with a scatter plot.",
                      "Generating different results using different latent space points and decoder networks."],
        "entity": "Python, Keras, Deep Learning",
        "year": "2020"
      },
      {
        "name": "Text Generation Using RNN Network",
        "highlights": ["Using Shakespear dataset.",
                      "LSTM layers for data generation and memory."],
        "entity": "Python, Keras, NLP",
        "year": "2020"
      },
      {
        "name": "Video Frame Prediction Using CNN and RNN",
        "highlights": ["Predicting future frames of pendulum movement video.",
                      "1, 5, 10, 20, 50 frames look-ahead window.",
                      "Using convolutional layers to implement an encoder and a decoder to reduce the frame's dimensions.",
                      "Using LSTM layers as the middle part of the network between encoder and decoder to predict future frames."],
        "entity": "Python, Keras, Image Processing",
        "year": "2020"
      },
      {
        "name": "Solving Frozen Lake Problem Using Q-Learning and Deep Q-Learning",
        "highlights": ["Using \"FrozenLake v0\" environment from gym.",
                      "Implemented Q-learning method.",
                      "Implementing Deep Q-Learning with experience replay using keras."],
        "entity": "Python, Keras, Reinforcement Learning",
        "year": "2020"
      },
      {
        "name": "YOLO Object Detection on Chess Pieces Dataset",
        "highlights": ["Using YOLO-v5."],
        "entity": "{Python, Keras, YOLO, Computer Vision, Object Detection",
        "year": "2020"
      },
      {
        "name": "Transfer-Learning with EfficientNet",
        "highlights": ["A review on EfficientNet novelties and network structures.",
                      "Running inference using EfficientNet-B0 using Keras.",
                      "Transfer learning using EfficientNet-B0 top part and custom dense layers to classify two classes from the CIFAR-10 dataset"],
        "entity": "Python, Keras, Deep Learning",
        "year": "2020"
      },
      {
        "name": "Solving Simple Problems using Multi-Layer Perceptron",
        "highlights": ["Predicting average daily rates of \"Hotel Booking Demand\" dataset as a regression problem.",
                      "Predicting labels of CIFAR-10 dataset as a classification problem.",
                      "Implemented using Keras library.",
                      "Analyzing effects of using different activation functions, loss functions, optimizers, and evaluation metrics.",
                      "Providing and implementing a solution for unbalanced data."],
        "entity": "Python, Keras, Neural Networks",
        "year": "2020"
      },
      {
        "name": "Software testing course projects",
        "highlights": ["Different testing methods implemented on \"Spring PetClinic Sample Application\".",
                      "Testing methods including JUnit, test doubles, code coverage methods, input‌ space partitioning, API testing, mutation testing, UI testing, and BDD."],
        "entity": "Java, Software Testing, JUnit",
        "year": "2020"
      },
      {
        "name": "Ball on Plate Balancing System",
        "highlights": ["Using a rectangle plate with four arms and a camera above the plate.",
                      "Fetching ball position using camera and object detection based on the ball's color.",
                      "Balancing the ball in the center of the plate using a PID controller and four-step motors."],
        "entity": "Python, OpenCV, Computer Vision, Socket Programming, PID Controller",
        "year": "2020"
      },
      {
        "name": "Jalas Website",
        "highlights": ["A website to set meeting dates.",
                      "Creating users and meetings, adding users to meetings, editing meetings, and notifying meeting invitees through email.",
                      "Java Spring Framework for the back-end and Reach.js for the front-end."],
        "entity": "Java, Java Spring Framework, SQL, NoSQL, REST API",
        "year": "2019"
      },
      {
        "name": "Jaboonja",
        "highlights": ["Implementation of a web application for finding projects to do if you are qualified for them.",
                      "Implemented in Java(Spring framework) for backend and JavaScript(React.js) for frontend."],
        "entity": "Java, Java Spring Framework, HTML, CSS",
        "year": "2019"
      },
      {
        "name": "\"UCI Heart Disease\" data set classification",
        "highlights": ["Using bagging decision tree and random forest methods."],
        "entity": "Python, Artificial Intelligence, Machine Learning, Data Science",
        "year": "2019"
      },
      {
        "name": "Saadi and Hafez poem classification",
        "highlights": ["Pre-processing and using the bag-of-words method on the Saadi and Hafez poems dataset.",
                      "Classification using naive Bayes method."],
        "entity": "Python, Artificial Intelligence, Machine Learning, NLP, Data Science",
        "year": "2019"
      },
      {
        "name": "Simple Intelligent Game Players",
        "highlights": ["Checkers player using Mini-Max algorithm with alpha-beta pruning method.",
                      "PacMan player using different searching algorithms (A*, IDS, BFS) to design an intelligent PacMan in a modified game version."],
        "entity": "Python, Artificial Intelligence",
        "year": "2018"
      },
      {
        "name": "Operating Systems Course Projects",
        "highlights": ["Synchronization of MLP Neural Networks Using Semaphores: Using semaphore locks to assure synchronization and output integrity of distinct concurrent processes in each layer of an MLP neural network.",
                      "Multi-Thread Store Search: Using load balancing and multi-threading through a pipeline and asynchronous forking techniques.",
                      "Online Battleship Game: Using the C programming language, createing a Battleship game in which the server connects two clients and the game runs in a peer-to-peer manner."],
        "entity": "C, C++, Operating Systems, Socket Programming, Threading, Distributed Systems",
        "year": "2018"
      },
      {
        "name": "Image compression and decompression",
        "highlights": ["With color space conversion (RGB to YUV), downsampling, signal transform, quantization, and lossless coding steps for compression."],
        "entity": "Verilog, C, Computer-Aided Design",
        "year": "2018"
      },
      {
        "name": "Advanced Programming Course Projects",
        "highlights": ["Taxiare: A taxi ordering application: Client-Server architecture, Qt application with user administration, pricing computation (using graph search methods), and graphical interface.",
                        "\"Plants Vs. Zombies\" Game: Simple graphical implementation, employing the RSDL library for graphical rendering and simple C++ to handle various moving elements.",
                        "Image Steganography: Using a cipher key to perform both the encryption and decryption of a text message contained within a picture."],
        "entity": "C++, RSDL, Qt",
        "year": "2016 - 2017"
      },
      {
        "name": "Simple project version control",
        "highlights": ["With the capabilities of creating users and projects, adding users to projects, versioning projects, and keeping track of the versions."],
        "entity": "C",
        "year": "2016"
      }
    ],
    "meta": {
      "canonical": "https://raw.githubusercontent.com/jsonresume/resume-schema/master/resume.json",
      "version": "v1.0.0",
      "lastModified": "2017-12-24T15:53:00"
    }
  }
  
